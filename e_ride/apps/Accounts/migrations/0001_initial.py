# Generated by Django 5.0 on 2024-01-25 00:33

import base.managers
import cloudinary.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('DRIVER', 'Driver'), ('CLIENT', 'Client'), ('ADMIN', 'Admin'), ('SUPERADMIN', 'Superadmin')], max_length=50)),
                ('permissions', models.ManyToManyField(to='Accounts.permissions')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='username')),
                ('email', models.CharField(max_length=32, unique=True, verbose_name='email')),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Accounts.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', base.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='middle name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last name')),
                ('profile_img', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('NB', 'Non-Binary'), ('PRF', 'Prefer Not To Say')], max_length=52)),
                ('nin', models.IntegerField()),
                ('drivers_license', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('is_verified', models.BooleanField(default=False)),
                ('car_type', models.CharField(max_length=250)),
                ('plate_number', models.CharField(max_length=250)),
                ('availability_status', models.CharField(choices=[('ONLINE', 'ONLINE'), ('OFFLINE', 'OFFLINE'), ('ENGAGED', 'ENGAGED')], max_length=25)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='middle name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last name')),
                ('profile_img', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('NB', 'Non-Binary'), ('PRF', 'Prefer Not To Say')], max_length=52)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
